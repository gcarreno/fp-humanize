name: fp-humanize

defaults:
  run:
    shell: bash

permissions:
  contents: write

on:

  push:
    branches: [ main ]
    tags: [ "*" ]
    paths-ignore: [ "README.md", "CHANGELOG.md", "cliff.toml" ]

  pull_request:
    branches: [ main ]

jobs:

  build:
    name: Build Demo
    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system: [ ubuntu-latest, windows-latest, macos-latest ]
        lazarus-versions: [ stable, 3.4 ]
      fail-fast: false

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - name: Install Lazarus
      uses: gcarreno/setup-lazarus@v3
      with:
        lazarus-version: ${{ matrix.lazarus-versions }}
        with-cache: false

    - name: Build the Demo
      run: |
        lazbuild -B "packages/Lazarus/fp_humanize.lpk"
        lazbuild -B --bm=Release "demo/Demo.lpi"

    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: demo-${{ matrix.operating-system }}
        path: |
          bin/Demo
          bin/Demo.exe

  test:
    name: Test package
    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system: [ ubuntu-latest, windows-latest, macos-latest ]
        lazarus-versions: [ stable, 3.4 ]
      fail-fast: false

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - name: Install Lazarus
      uses: gcarreno/setup-lazarus@v3
      with:
        lazarus-version: ${{ matrix.lazarus-versions }}
        with-cache: false

    - name: Build the test application
      run: |
        lazbuild -B "packages/Lazarus/fp_humanize.lpk"
        lazbuild -B --bm=Release "tests/test-humanize-cli.lpi"

    - name: Run the tests
      run: bin/test-humanize-cli --all --format=plain
  release:
    if: contains(github.ref_type, 'tag')

    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [ build, test ]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - name: Set env
      run: echo "tag=${{ github.ref_name }}" >> "$GITHUB_ENV"

    - name: Download the Release binary
      uses: actions/download-artifact@v4
      with:
        name: demo-${{ matrix.operating-system }}
        path: demo-${{ matrix.operating-system }}

    - name: List files
      run: ls -alF demo-bin

    - name: Create release files
      run: |
        cd demo-ubuntu-latest
        chmod +x Demo
        cp -r ../locale .
        tar -zcvf demo-${{ env.tag }}-x86_64-linux.tar.gz Demo locale
        cd ..
        cd demo-windows-latest
        cp -r ../locale .
        zip -r demo-${{ env.tag }}-x86_64-win64.zip Demo.exe locale
        cd ..
        cd demo-ubuntu-latest
        chmod +x Demo
        cp -r ../locale .
        tar -zcvf demo-${{ env.tag }}-x86_64-Darwin.tar.gz Demo locale

    - name: Generate Release Notes
      id: git-cliff
      uses: orhun/git-cliff-action@v4
      with:
        config: cliff.toml
        args: --latest --strip header

    - name: Create GitHub release
      uses: softprops/action-gh-release@v2
      with:
        name: fp-ncurses-tui ${{ env.tag }}
        body: ${{ steps.git-cliff.outputs.content }}
        files: |
          examples-linux/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
